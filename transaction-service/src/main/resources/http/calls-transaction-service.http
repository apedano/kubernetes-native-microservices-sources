### This call will lead to overdrawn
POST {{uri}}/transactions/123456789
Content-Type: application/json

600

### Positive amount to add and negative for withdraw

POST http://localhost:8088/transactions/123456789
Content-Type: application/json

-1000

###

GET http://localhost:8088/transactions/123456789/balance
Content-Type: application/json

###


POST http://transaction-service-xan80-dev.apps.sandbox-m4.g2pi.p1.openshiftapps.com/transactions/123456789
Content-Type: application/json

1

###

GET http://transaction-service-xan80-dev.apps.sandbox-m4.g2pi.p1.openshiftapps.com/transactions/5465/balance

###

GET http://localhost:8088/transactions/5465/balance

###

POST http://transaction-service-xan80-dev.apps.sandbox-m4.g2pi.p1.openshiftapps.com//health-config
Content-Type: application/json

{
  "healty": true,
  "ready": true
}

###

POST http://localhost:8088/health-config
Content-Type: application/json

{
  "healty": true,
  "ready": true
}


### HTTP basic authentication test (check role in configuration)

GET http://localhost:8088/transactions/config-secure/5465/balance
Authorization: Basic quarkus quarkus

### @Generate access token (expires in 5 mins)
#Gets a token from Keycloak, simulating the OIDC Implicit Flow. The token will be valid for five
#minutes. To manually refresh the token after five minutes, rerun the command. The gettoken.sh
#script is heavily documented.

POST http://localhost:8080/realms/bank/protocol/openid-connect/token
content-type: application/x-www-form-urlencoded

username=jwt&password=jwt&grant_type=password&client_id=bank&client_secret=4DePVOuZxVKNGYD9FLQk9sQ2SCT0QMYZ

> {%
    client.global.set("access_token", JSON.parse(JSON.stringify(response.body)).access_token);
    client.log("Retrieved access token: " + client.global.get("access_token"));
%}

### @JWT secured call using access token

GET http://localhost:8088/transactions/jwt-secure/5465/balance
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{access_token}}